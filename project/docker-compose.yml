version: "3"

services:
  broker-service:
    build:
      context: ../broker-service
      dockerfile: ../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
  logger-service:
    build:
      context: ../logger-service
      dockerfile: ../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
  mail-service:
    build:
      context: ../mail-service
      dockerfile: ../mail-service/mail-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com

  authentication-service:
    build:
      context: ../authentication-service
      dockerfile: ../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8083:80"
    deploy:
      mode : replicated
      replicas: 1
    environment:
      DSN : "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  postgres :
    image : 'postgres:14.2'
    ports :
      - "5433:5432"
    restart: always
    deploy :
      mode : replicated
      replicas: 1
    environment:
      POSTGRES_USER : postgres
      POSTGRES_PASSWORD : password
      POSTGRES_DB : users

  mongo:
    image: 'mongo:4.2.17-bionic'
    ports:
      - "27017:27017"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports :
      - "1025:1025"
      - "8025:8025"
